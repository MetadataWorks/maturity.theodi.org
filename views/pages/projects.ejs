<!-- views/sources.ejs -->
<%- include('../partials/header') %>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.0/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.0/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.7.0/js/buttons.print.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.13.5/css/buttons.dataTables.min.css">
<script src="/js/dashboard.js"></script>

<!-- Share Overlay -->
<div id="shareOverlay" class="overlay">
    <div class="overlay-content">
        <span class="close-btn" onclick="closeShareOverlay()">&times;</span>
        <div class="share-section">
            <h2>New share</h2>
            <form id="shareForm">
                <label for="email">Please enter the email you wish to share this project with</label>
                <input type="email" id="email" name="email" class="input inputText">
                <button type="submit">Share</button>
            </form>
        </div>
        <div class="share-section">
            <h2>Current shares</h2>
            <table id="sharedEmailsTable" class="display" style="width:100%">
                <thead>
                    <th>Email</th>
                    <th>Action</th>
                </thead>
                <tbody id="sharedEmailsBody"></tbody>
            </table>
        </div>
    </div>
</div>
<div class="main-content light-blue">
<input type="hidden" value="<%= page.link %>" id="pageId"/>
<div class="content-block light-blue">
    <div style="text-align: center; width: 100%;">
        <br/>
        <button class="transparent" onclick="window.location.href='/new'">Start a new evaluation</button>
    </div>
</div>
<div class="content-block white">
    <h2>My evaluations</h2>
    <table id="myProjectsTable" class="display" style="width:100%"></table>
</div>
<div class="content-block light-blue">
    <h2>Evaluations shared with me</h2>
    <table id="sharedProjectsTable" class="display" style="width:100%"></table>
</div>
</div>

<script>

$(document).ready(function () {
    // Fetch projects data from server
    fetch('/projects', {
        headers: {
            'Accept': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        renderMyProjects(data.ownedProjects);
        renderSharedProjects(data.sharedProjects);
    });
});

function renderMyProjects(data) {
    const myProjectsTable = $('#myProjectsTable').DataTable({
        ajax: {
            url: '/projects',
            dataSrc: 'ownedProjects.projects',
            headers: {
                Accept: 'application/json' // Set the Accept header to indicate JSON format
            }
        },
        columns: [
            { data: 'title', title: 'Title', defaultContent: '' },
            {
                data: 'score',
                title: 'Maturity level',
                width: '12%'
            },
            {
                data: 'lastModified',
                title: 'Last Modified',
                width: '12%',
                render: function(data, type, row) {
                    // Parse the date string into a Date object
                    var date = new Date(data);
                    // Format the date nicely (e.g., "April 18, 2024 14:36:41")
                    return date.toLocaleString();
                }
            },
            {
                title: 'Actions',
                render: function (data, type, row) {
                    return '<button class="editBtn" data-id="' + row.id + '">Edit</button>' +
                           '<button class="shareBtn" data-id="' + row.id + '">Share</button>' +
                           '<button class="deleteBtn" data-id="' + row.id + '">Delete</button>'
                }
            }
        ],
        order: [[0, 'asc']], // Sort by title ascending by default
        dom: 'Bfrtip', // Show buttons for export
        buttons: [
            //'copy', 'csv', 'excel', 'pdf', 'print'
        ]
    });

    $('#myProjectsTable').on('click', '.editBtn', function () {
        var id = $(this).data('id');
        window.location.href = '/project/' + id + "/projectDetails";
    });

    $('#myProjectsTable').on('click', '.viewOutput', function () {
        var id = $(this).data('id');
        window.location.href = '/project/' + id + "/";
    });

    $('#myProjectsTable').on('click', '.deleteBtn', function () {
        var id = $(this).data('id');
        if (confirm('Are you sure you want to delete this project?')) {
            $('#res').html('<p>Deleting, please wait.</p>');
            $.ajax({
                url: '/project/' + id,
                type: 'DELETE',
                success: function (result) {
                    $('#res').html('<p>Project deleted successfully.</p>');
                    myProjectsTable.ajax.reload();
                    // Clear message after 5 seconds
                    setTimeout(function () {
                        $('#res').html('');
                    }, 5000);
                },
                error: function (xhr, status, error) {
                    // Show error message
                    $('#res').html('<p>Error deleting project: ' + error + '</p>');
                    // Clear message after 5 seconds
                    setTimeout(function () {
                        $('#res').html('');
                    }, 5000);
                }
            });
        }
    });
    $('#myProjectsTable').on('click', '.shareBtn', function () {
        var id = $(this).data('id');
        console.log(id);
        openShareOverlay();
        document.getElementById("shareOverlay").setAttribute('data-projectid',id);

        // Get shared users of the project
        getSharedUsers(id)
            .then(sharedUsers => {
                renderSharedUsers(sharedUsers);
            });
    });

    $('#sharedEmailsTable').DataTable({
        order: [[0, 'asc']], // Sort by title ascending by default
        dom: 'Bfrtip', // Show buttons for export
        buttons: [
            //'copy', 'csv', 'excel', 'pdf', 'print'
        ]
    });
    // Add event listener for share form submission
    $('#shareForm').on('submit', function (event) {
        event.preventDefault();
        const email = $('#email').val();
        const projectId = $(this).closest('.overlay').data('projectid');

        // Call API to add share with email
        fetch(`/project/${projectId}/sharedUsers`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ email })
        })
        .then(response => {
            if (response.ok) {
                return response.json();
            }
            throw new Error('Failed to add shared user');
        })
        .then(() => {
            // Refresh shared users after adding
            getSharedUsers(projectId)
                .then(sharedUsers => {
                    renderSharedUsers(sharedUsers);
                });
        })
        .catch(error => console.error("Error adding shared user:", error));
    });

    // Add event listener for deleting shared email
    $('#sharedEmailsBody').on('click', 'button.deleteBtn', function () {
        const email = $(this).data('email');
        const projectId = $(this).closest('.overlay').data('projectid');

        // Call API to delete share with email
        fetch(`/project/${projectId}/sharedUsers/${email}`, {
            method: 'DELETE'
        })
        .then(response => {
            if (response.ok) {
                return response.json();
            }
            throw new Error('Failed to delete shared user');
        })
        .then(() => {
            // Refresh shared users after deleting
            getSharedUsers(projectId)
                .then(sharedUsers => {
                    renderSharedUsers(sharedUsers);
                });
        })
        .catch(error => console.error("Error deleting shared user:", error));
    });
}

function renderSharedProjects(data) {
    $('#sharedProjectsTable').DataTable({
        data: data,
        columns: [
            { data: 'title', title: 'Title', defaultContent: '' },
            {
                data: 'score',
                title: 'Maturity level',
                width: '12%'
            },
            { data: 'owner', title: 'Owner', defaultContent: '' },
            {
                data: 'lastModified',
                title: 'Last Modified',
                width: '12%',
                render: function(data, type, row) {
                    // Parse the date string into a Date object
                    var date = new Date(data);
                    // Format the date nicely (e.g., "April 18, 2024 14:36:41")
                    return date.toLocaleString();
                }
            },
            {
                title: 'Actions',
                render: function (data, type, row) {
                    return '<button class="editBtn" data-id="' + row.id + '">Edit</button>'
                }
            }
        ],
        order: [[0, 'asc']], // Sort by title ascending by default
        dom: 'Bfrtip', // Show buttons for export
        buttons: [
            //'copy', 'csv', 'excel', 'pdf', 'print'
        ]
    });

    $('#sharedProjectsTable').on('click', '.editBtn', function () {
        var id = $(this).data('id');
        window.location.href = '/project/' + id + "";
    });
    $('#sharedProjectsTable').on('click', '.viewOutput', function () {
        var id = $(this).data('id');
        window.location.href = '/project/' + id + "";
    });
}
// Function to open share overlay
function openShareOverlay() {
    document.getElementById("shareOverlay").style.display = "block";
}

// Function to close share overlay
function closeShareOverlay() {
    document.getElementById("shareOverlay").style.display = "none";
}

// Function to get shared users of a project
function getSharedUsers(projectId) {
    return fetch(`/project/${projectId}/sharedUsers`)
        .then(response => response.json())
        .catch(error => console.error("Error fetching shared users:", error));
}

function renderSharedUsers(sharedUsers) {
    const sharedEmailsTable = $('#sharedEmailsTable').DataTable();

    // Clear existing data
    sharedEmailsTable.clear();

    // Add new data
    sharedUsers.sharedUsers.forEach(email => {
        sharedEmailsTable.row.add([email, '<button class="deleteBtn" data-email="' + email + '">Remove share</button>']);
    });

    // Redraw the table
    sharedEmailsTable.draw();
}
</script>
<%- include('../partials/footer') %>